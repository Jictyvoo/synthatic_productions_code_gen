const SourceFollow = <String, List<String>>{
  "<Array Def>": ["{"],
  "<Params List>": ["function", "procedure"],
  "<Decls>": [
    "typedef",
    "\$",
    "start",
    "struct",
    "var",
    "const",
    "function",
    "procedure"
  ],
  "<Params>": ["procedure", "function"],
  "<Param Mult Arrays>": [","],
  "<Value>": ["*", "/"],
  "<Var Decl>": [
    "typedef",
    "real",
    "boolean",
    "int",
    "global",
    "local",
    "struct",
    "id",
    "string"
  ],
  "<Func Normal Stm>": [
    "read",
    "id",
    "return",
    "{",
    "print",
    "global",
    "local",
    "if",
    "while"
  ],
  "<Unary>": ["*", "/"],
  "<Extends>": ["typedef", "struct"],
  "<Equate>": ["||", "&&"],
  "<Stm Cmd>": [
    "read",
    "while",
    "if",
    "{",
    "print",
    "global",
    "local",
    "return",
    "id"
  ],
  "<Func Stms>": [
    "read",
    "id",
    "return",
    "{",
    "function",
    "print",
    "global",
    "local",
    "start",
    "procedure"
  ],
  "<Const>": [
    "typedef",
    ",",
    "struct",
    "string",
    "=",
    "global",
    "local",
    "int",
    "boolean",
    "id",
    "real"
  ],
  "<Type>": ["typedef", "id", "function"],
  "<Accesses>": [".", "++", "=", "/", "global", "--", "local", "[", "*", "("],
  "<Array Decl>": ["=", ","],
  "<Param Type>": ["id", "function"],
  "<Func Block>": ["function", "start", "procedure"],
  "<Args List>": ["(", "--", "[", ".", "++", "read", "=", "print"],
  "<Arrays>": [
    "id",
    "boolean",
    "=",
    "[",
    "typedef",
    ",",
    ".",
    "++",
    "int",
    "/",
    "global",
    "--",
    "local",
    "*",
    "struct",
    "string",
    "real",
    "("
  ],
  "<Const Decl>": [
    "typedef",
    "real",
    "boolean",
    "int",
    "global",
    "local",
    "struct",
    "id",
    "string"
  ],
  "<Param Arrays>": [",", "function", "procedure"],
  "<Args>": ["(", "--", "++", ".", "[", "read", "=", "print"],
  "<Assign>": [
    "read",
    "while",
    "boolean",
    "{",
    "int",
    "id",
    "print",
    "global",
    "return",
    "local",
    "typedef",
    "struct",
    "string",
    "real",
    "if"
  ],
  "<Array Expr>": ["{"],
  "<Compare_>": ["==", "&&", "!="],
  "<Log Expr>": [
    "read",
    "id",
    "return",
    "{",
    "print",
    "global",
    "str",
    "local",
    "num",
    "(",
    "log",
    "if",
    "while"
  ],
  "<Start Block>": [
    "typedef",
    "start",
    "struct",
    "var",
    "const",
    "function",
    "procedure"
  ],
  "<Log Compare>": ["==", "&&", "!="],
  "<Stm Scope>": [
    "typedef",
    "id",
    "struct",
    "{",
    "int",
    "return",
    "print",
    "global",
    "while",
    "local",
    "if",
    "read",
    "string",
    "real",
    "boolean"
  ],
  "<Var>": [
    "typedef",
    "id",
    ",",
    "boolean",
    "++",
    "string",
    "=",
    ".",
    "global",
    "--",
    "local",
    "(",
    "[",
    "int",
    "real",
    "struct"
  ],
  "<And>": ["||"],
  "<Var Decls>": [
    "read",
    "id",
    "if",
    "struct",
    "{",
    "function",
    "const",
    "print",
    "global",
    "typedef",
    "local",
    "return",
    "var",
    "start",
    "while",
    "procedure"
  ],
  "<Stm Id>": [
    "read",
    "while",
    "if",
    "{",
    "int",
    "boolean",
    "print",
    "global",
    "real",
    "local",
    "string",
    "struct",
    "typedef",
    "return",
    "id"
  ],
  "<Log Or>": [
    "read",
    "id",
    "return",
    "str",
    "print",
    "global",
    "while",
    "local",
    "num",
    "if",
    "log",
    "(",
    "{"
  ],
  "<Decl Atribute>": ["=", ","],
  "<Log Or_>": [
    "read",
    "while",
    "return",
    "str",
    "print",
    "global",
    "{",
    "local",
    "num",
    "(",
    "log",
    "if",
    "id"
  ],
  "<Equate_>": ["||", "&&"],
  "<Or_>": [
    "read",
    "id",
    "-",
    "return",
    "{",
    "++",
    "=",
    "print",
    "global",
    "--",
    "local",
    "num",
    "(",
    "log",
    ",",
    "str"
  ],
  "<Log Equate>": ["||", "&&"],
  "<Struct Block>": ["typedef", "function", "struct", "procedure"],
  "<Var Stm>": [
    "read",
    "id",
    "if",
    "{",
    "print",
    "global",
    "local",
    "while",
    "return"
  ],
  "<Mult_>": ["+", "-"],
  "<Index>": ["["],
  "<Const List>": [
    "typedef",
    "id",
    ".",
    "++",
    "int",
    "=",
    "string",
    "(",
    "--",
    "local",
    "struct",
    "[",
    "global",
    "boolean",
    "real"
  ],
  "<Var Block>": [
    "read",
    "id",
    "while",
    "struct",
    "{",
    "function",
    "if",
    "print",
    "global",
    "local",
    "start",
    "return",
    "var",
    "typedef",
    "const",
    "procedure"
  ],
  "<Func Decl>": ["typedef", "function", "struct", "procedure"],
  "<Typedef>": [
    "typedef",
    "id",
    "struct",
    "int",
    "global",
    "local",
    "string",
    "real",
    "boolean"
  ],
  "<Log Compare_>": ["==", "&&", "!="],
  "<Log Equate_>": ["||", "&&"],
  "<Log Unary>": ["&&", "<=", "!=", "==", "<", ">=", ">"],
  "<Add>": ["&&", "<=", "!=", "==", "<", ">=", ">"],
  "<Proc Decl>": ["typedef", "function", "struct", "procedure"],
  "<Else Stm>": [
    "read",
    "while",
    "if",
    "{",
    "print",
    "global",
    "local",
    "return",
    "id"
  ],
  "<Add_>": ["<=", "!=", "==", "<", ">=", ">"],
  "<Const Id>": [
    "typedef",
    "id",
    "struct",
    "int",
    "global",
    "local",
    "string",
    "real",
    "boolean"
  ],
  "<Access>": [
    "<=",
    ".",
    "==",
    "<",
    "/",
    "global",
    "*",
    "!=",
    ">",
    ">=",
    "local"
  ],
  "<Log Value>": ["<=", "!=", "==", "<", ">=", ">"],
  "<Const Block>": ["var"],
  "<Const Decls>": ["var", "const"],
  "<Func Stm>": [
    "read",
    "id",
    "if",
    "{",
    "print",
    "global",
    "local",
    "while",
    "return"
  ],
  "<Log And_>": ["||"],
  "<Expr>": [
    "read",
    "id",
    "boolean",
    "=",
    "[",
    "struct",
    "real",
    "int",
    "typedef",
    ",",
    "-",
    "return",
    "{",
    "string",
    ".",
    "print",
    "(",
    "--",
    "local",
    "num",
    "++",
    "str",
    "global",
    "log"
  ],
  "<Param>": [",", "function", "procedure"],
  "<Array>": ["["],
  "<Var List>": [
    "typedef",
    "id",
    "boolean",
    "++",
    "string",
    "=",
    "(",
    "global",
    "--",
    "local",
    ".",
    "[",
    "int",
    "real",
    "struct"
  ],
  "<Program>": ["\$"],
  "<And_>": ["||"],
  "<Array Vector>": ["=", ","],
  "<Compare>": ["==", "&&", "!="],
  "<Id Value>": [">", ">=", "*", "!=", "==", "<", "<=", "/"],
  "<Var Id>": [
    "typedef",
    "id",
    "struct",
    "int",
    "global",
    "local",
    "string",
    "real",
    "boolean"
  ],
  "<Log And>": ["||"],
  "<Or>": [
    "read",
    "id",
    "boolean",
    "=",
    "[",
    ".",
    "string",
    "real",
    "typedef",
    ",",
    "-",
    "return",
    "++",
    "int",
    "struct",
    "print",
    "(",
    "--",
    "local",
    "num",
    "str",
    "{",
    "global",
    "log"
  ],
  "<Decl>": ["typedef", "function", "procedure", "struct"],
  "<Mult>": ["+", "-"]
};
