const SourceFirst = <String, List<String>>{
  "<Array Def>": ["id", "-", "log", "(", "!", "local", "num", "str", "global"],
  "<Params List>": ["", ","],
  "<Decls>": ["typedef", "struct", "function", "", "procedure"],
  "<Params>": ["id", "", "boolean", "real", "int", "string", "struct"],
  "<Func Stm>": [
    "read",
    "while",
    "return",
    "{",
    "print",
    "global",
    "local",
    "id",
    "if"
  ],
  "<Expr>": ["id", "-", "log", "global", "!", "local", "num", "(", "str"],
  "<Var Decl>": [
    "typedef",
    "real",
    "struct",
    "string",
    "global",
    "local",
    "id",
    "boolean",
    "int"
  ],
  "<Func Decl>": ["function"],
  "<Unary>": ["id", "-", "log", "(", "!", "local", "num", "str", "global"],
  "<Extends>": ["extends", ""],
  "<Equate>": ["id", "-", "log", "(", "!", "local", "num", "str", "global"],
  "<Stm Cmd>": ["read", "print"],
  "<Func Stms>": [
    "read",
    "id",
    "return",
    "{",
    "print",
    "global",
    "local",
    "",
    "if",
    "while"
  ],
  "<Const>": ["id"],
  "<Type>": ["real", "boolean", "int", "struct", "string"],
  "<Accesses>": ["", "."],
  "<Array Decl>": ["{"],
  "<Array>": ["["],
  "<Const Decls>": [
    "typedef",
    "id",
    "boolean",
    "string",
    "global",
    "local",
    "",
    "int",
    "real",
    "struct"
  ],
  "<Args List>": ["", ","],
  "<Arrays>": ["[", ""],
  "<Const Decl>": [
    "typedef",
    "real",
    "struct",
    "string",
    "global",
    "local",
    "id",
    "boolean",
    "int"
  ],
  "<Param Arrays>": ["[", ""],
  "<Mult>": ["id", "-", "str", "(", "!", "local", "num", "global", "log"],
  "<Assign>": ["++", "--", "="],
  "<Array Expr>": ["", ","],
  "<Compare_>": ["<=", "", "<", ">=", ">"],
  "<Log Expr>": ["global", "id", "local", "num", "log", "!", "(", "str"],
  "<Start Block>": ["start"],
  "<Access>": ["."],
  "<Stm Scope>": ["local", "global"],
  "<Var>": ["id"],
  "<And>": ["id", "-", "str", "(", "!", "local", "num", "global", "log"],
  "<Var Decls>": [
    "typedef",
    "id",
    "boolean",
    "string",
    "global",
    "local",
    "",
    "int",
    "real",
    "struct"
  ],
  "<Stm Id>": ["(", "--", ".", "[", "=", "++"],
  "<Log Or>": ["global", "id", "local", "num", "log", "str", "(", "!"],
  "<Decl Atribute>": [
    "id",
    "-",
    "{",
    "global",
    "!",
    "local",
    "num",
    "str",
    "(",
    "log"
  ],
  "<Log Or_>": ["||", ""],
  "<Equate_>": ["==", "", "!="],
  "<Or_>": ["||", ""],
  "<Log Equate>": ["global", "id", "local", "num", "log", "str", "(", "!"],
  "<Struct Block>": ["typedef", "struct"],
  "<Var Stm>": ["read", "id", "local", "global", "print"],
  "<Const Id>": ["(", "--", ".", "[", "++", "=", "id"],
  "<Index>": ["id", "-", "log", "(", "!", "local", "num", "", "str", "global"],
  "<Const List>": ["=", ","],
  "<Var Block>": ["var", ""],
  "<Value>": ["global", "id", "-", "num", "log", "(", "local", "str"],
  "<Param Mult Arrays>": ["[", ""],
  "<Log Compare_>": ["<=", "", "<", ">=", ">"],
  "<Log Equate_>": ["==", "", "!="],
  "<Log Unary>": ["global", "id", "local", "num", "log", "str", "(", "!"],
  "<Add>": ["id", "-", "str", "global", "!", "local", "num", "log", "("],
  "<Const Block>": ["", "const"],
  "<Else Stm>": ["else", ""],
  "<Typedef>": ["typedef"],
  "<Func Normal Stm>": [
    "read",
    "id",
    "local",
    "return",
    "{",
    "global",
    "print"
  ],
  "<Func Block>": ["var"],
  "<Log Value>": ["global", "id", "local", "num", "log", "(", "str"],
  "<Add_>": ["+", "-", ""],
  "<Mult_>": ["", "*", "/"],
  "<Log Compare>": ["global", "id", "local", "num", "log", "!", "(", "str"],
  "<Log And_>": ["", "&&"],
  "<Proc Decl>": ["procedure"],
  "<Param>": ["id", "boolean", "struct", "int", "string", "real"],
  "<Var Id>": ["(", "--", ".", "[", "++", "=", "id"],
  "<Var List>": [",", "=", ""],
  "<Program>": [
    "typedef",
    "start",
    "struct",
    "var",
    "const",
    "function",
    "procedure"
  ],
  "<And_>": ["", "&&"],
  "<Array Vector>": ["", ","],
  "<Compare>": ["id", "-", "log", "global", "!", "local", "num", "(", "str"],
  "<Id Value>": ["[", "("],
  "<Args>": ["id", "-", "log", "(", "!", "local", "num", "", "str", "global"],
  "<Log And>": ["global", "id", "local", "num", "log", "!", "(", "str"],
  "<Or>": ["id", "-", "str", "global", "!", "local", "num", "log", "("],
  "<Decl>": ["typedef", "function", "struct", "procedure"],
  "<Param Type>": ["real", "boolean", "id", "int", "string", "struct"]
};
